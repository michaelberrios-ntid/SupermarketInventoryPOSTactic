services:
  store_api:
    build:
      context: ./src
      dockerfile: StoreInventory.API/Dockerfile
    expose:
      - "8080"
    volumes:
      - storedata:/app/data
    restart: always
    networks: [appnet]

  nginx:
    image: nginx:alpine
    ports:
      - "5000:80"
    depends_on:
      - store_api
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

    restart: always
    networks: [appnet]

  pos_app:
    build:
      context: ./src
      dockerfile: POS.ConsoleApp/Dockerfile
    volumes:
      - posdata:/app/data
    stdin_open: true
    tty: true
    networks: [appnet]

  pos_sync:
    build:
      context: ./src
      dockerfile: POS.SyncService/Dockerfile
    depends_on:
      - nginx
    volumes:
      - posdata:/app/data
    environment:
      - STORE_API_BASE=http://nginx
    networks: [appnet]

  watchdog:
    image: linuxserver/docker-compose
    container_name: compose-watchdog
    environment:
      COMPOSE_PROJECT_NAME: supermarketinventorypostactic
      TARGET_REPLICAS: "3"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app
    working_dir: /app
    entrypoint: ["/bin/sh", "/app/watchdog.sh"]
    restart: always

networks:
  appnet:
    driver: bridge

volumes:
  posdata:
  storedata:
